apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: redis
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: redis-volume
  resources:
    requests:
      storage: 5Gi
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: redis-pv-volume
  labels:
    type: local
    app: redis-server
spec:
  storageClassName: redis-volume
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/redis"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-server
  namespace: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-server
  template:
    metadata:
      labels:
        app: redis-server
    spec:
      automountServiceAccountToken: false
      containers:
        - name: redis-server
          image: redis:7.2.4
          args: ["--appendonly", "yes", "--requirepass", "$(REDIS_PASS)"]
          ports:
            - name: redis-server
              containerPort: 6379
          volumeMounts:
            - name: lv-storage
              mountPath: /data
          resources:
            limits:
              cpu: "500m"
              memory: "500m"
              ephemeral-storage: "4Gi"
          env:
            - name: REDIS_PASS
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: redis-pass
      volumes:
        - name: lv-storage
          persistentVolumeClaim:
            claimName: redis-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: redis
spec:
  selector:
    app: redis-server
  ports:
    - name: redis-port
      protocol: TCP
      port: 6379
      targetPort: 6379