version: '3'

networks:
  bank-network:
    name: bank-network
    external: false
    driver: bridge
  customer-network:
    name: customer-network
    driver: bridge
    external: false

services:
  db:
    container_name: customer-db
    image: "postgres"
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER
      interval: 10s
      timeout: 3s
      retries: 3
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1111
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - customer-network

  app:
    container_name: customer-app
    build: .
    ports:
      - "8082:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db/postgres
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1111
      JDBC_DRIVER: org.postgresql.Driver
      JDBC_URL: jdbc:postgresql://db/postgres
      JDBC_USERNAME: postgres
      JDBC_PASSWORD: 1111
    depends_on:
      db:
        condition: service_healthy
    networks:
      - bank-network
      - customer-network

  pgadmin:
    container_name: customer-pgadmin
    image: dpage/pgadmin4:7
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - customer-network

volumes:
  db-data:
    name: customer-db-data
  pgadmin-data:
    name: customer-pgadmin-data
